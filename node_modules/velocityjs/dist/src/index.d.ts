import { Compile } from './compile/index';
import { parse } from './parse';
import { CompileConfig, Macros, RenderContext } from './type';
import { getRefText } from './helper/index';
export declare const render: (template: string, context?: RenderContext, macros?: Macros, config?: CompileConfig) => string;
export declare const Helper: {
    getRefText: typeof getRefText;
};
export { parse, Compile };
declare const velocity: {
    render: (template: string, context?: RenderContext, macros?: Macros, config?: CompileConfig) => string;
    parse: (str: string, blocks?: {
        [x: string]: boolean;
    }, ignoreSpace?: boolean) => import('./type').VELOCITY_AST[];
    Compile: typeof Compile;
    Helper: {
        getRefText: typeof getRefText;
    };
};
export default velocity;
